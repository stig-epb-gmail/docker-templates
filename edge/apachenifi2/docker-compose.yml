version: '3'

services:
  nifi:
    hostname: nifi2dev
    image: apache/nifi:2.0.0
    container_name: nifi200
    ports:
      - 8443:8443
      - 8444:8444
      - 8445:8445
      - 8446:8446
      - 8447:8447
      - 8448:8448
      - 8449:8449
      - 8450:8450
      - 514:514   # Syslog
      - 2055:2055 # NetFlow
    environment:
      - NIFI_WEB_HTTPS_PORT=8443
      - NIFI_REMOTE_INPUT_HOST= # The host name that will be given out to clients to connect to this NiFi instance for Site-to-Site communication. By default, it is the value from InetAddress.getLocalHost().getHostName(). On UNIX-like operating systems, this is typically the output from the hostname command.
      - SINGLE_USER_CREDENTIALS_USERNAME=${nifiusername}
      - SINGLE_USER_CREDENTIALS_PASSWORD=${nifipassword}
      - nifi_security_user_login_identity_provider=single-user-provider # This indicates what type of login identity provider to use. It can be set to the identifier from a provider in the file specified in nifi.login.identity.provider.configuration.file. Setting this property will trigger NiFi to support username/password authentication. The default value is single-user-provider.
    volumes:
      - nifi2_conf:/opt/nifi/nifi-current/conf
      - nifi2_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi2_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi2_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi2_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi2_state:/opt/nifi/nifi-current/state
      - nifi2_logs:/opt/nifi/nifi-current/logs
      - nifi2_python_extensions:/opt/nifi/nifi-current/python_extensions
      - nifi2_nar_extensions:/opt/nifi/nifi-current/nar_extensions
    restart: unless-stopped

volumes:
  nifi2_conf:
    driver: local
  nifi2_database_repository:
    driver: local
  nifi2_flowfile_repository:
    driver: local
  nifi2_content_repository:
    driver: local
  nifi2_provenance_repository:
    driver: local
  nifi2_state:
    driver: local
  nifi2_logs:
    driver: local
  nifi2_python_extensions:
    driver: local
  nifi2_nar_extensions:
    driver: local
  nifi2_custom_storage:
    driver: local
